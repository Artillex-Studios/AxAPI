package com.artillexstudios.axapi.packet;

import com.artillexstudios.axapi.AxPlugin;
import com.artillexstudios.axapi.utils.LogUtils;
import com.artillexstudios.axapi.utils.Version;
import it.unimi.dsi.fastutil.ints.Int2ObjectMap;
import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;

public final class PacketTypes {
    private static final Int2ObjectMap<PacketType> PACKET_TYPES = new Int2ObjectOpenHashMap<>();
    public static final PacketType BUNDLE_DELIMITER = new PacketType(Version.v1_19_3, Version.FUTURE_RELEASE);
    public static final PacketType ADD_ENTITY = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType ADD_EXPERIENCE_ORB = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType ADD_MOB = new PacketType(Version.v1_18, Version.v1_18_2);
    public static final PacketType ADD_PAINTING = new PacketType(Version.v1_18, Version.v1_18_2);
    public static final PacketType ADD_PLAYER = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType ADD_VIBRATION_SIGNAL = new PacketType(Version.v1_18, Version.v1_18_2);
    public static final PacketType ANIMATE = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType STATISTICS = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType BLOCK_BREAK_ACK = new PacketType(Version.v1_18, Version.v1_18_2);
    public static final PacketType BLOCK_CHANGE_ACK = new PacketType(Version.v1_19, Version.FUTURE_RELEASE);
    public static final PacketType BLOCK_BREAK_ANIMATION = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType BLOCK_ENTITY_DATA = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType BLOCK_EVENT = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType BLOCK_UPDATE = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType BOSS_EVENT = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType DIFFICULTY = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType CHUNK_BATCH_END = new PacketType(Version.v1_20_2, Version.FUTURE_RELEASE);
    public static final PacketType CHUNK_BATCH_START = new PacketType(Version.v1_20_2, Version.FUTURE_RELEASE);
    public static final PacketType CHUNK_BIOMES = new PacketType(Version.v1_19_3, Version.FUTURE_RELEASE);
    public static final PacketType CHAT = new PacketType(Version.v1_18, Version.v1_18_2);
    public static final PacketType CHAT_PREVIEW = new PacketType(Version.v1_19, Version.v1_19_2);
    public static final PacketType CLEAR_TITLES = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType TAB_COMPLETE = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType DECLARE_COMMANDS = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType CONTAINER_CLOSE = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType CONTAINER_CONTENT = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType CONTAINER_DATA = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType CONTAINER_SET_SLOT = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType COOKIE_REQUEST = new PacketType(Version.v1_20_4, Version.FUTURE_RELEASE);
    public static final PacketType COOLDOWN = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType CHAT_COMPLETIONS = new PacketType(Version.v1_19_1, Version.FUTURE_RELEASE);
    public static final PacketType CUSTOM_PAYLOAD = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType DAMAGE_EVENT = new PacketType(Version.v1_19_3, Version.FUTURE_RELEASE);
    public static final PacketType DEBUG_SAMPLE = new PacketType(Version.v1_20_4, Version.FUTURE_RELEASE);
    public static final PacketType CUSTOM_SOUND = new PacketType(Version.v1_18, Version.v1_19_2);
    public static final PacketType DELETE_CHAT = new PacketType(Version.v1_19_1, Version.FUTURE_RELEASE);
    public static final PacketType DISCONNECT = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType DISGUISED_CHAT = new PacketType(Version.v1_19_2, Version.FUTURE_RELEASE);
    public static final PacketType ENTITY_EVENT = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType ENTITY_POSITION_SYNC = new PacketType(Version.v1_21_2, Version.FUTURE_RELEASE);
    public static final PacketType EXPLODE = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType FORGET_LEVEL_CHUNK = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType GAME_EVENT = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType HORSE_SCREEN = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType HURT_ANIMATION = new PacketType(Version.v1_19_3, Version.FUTURE_RELEASE);
    public static final PacketType WORLD_BORDER = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType KEEPALIVE = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType CHUNK_DATA = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType LEVEL_EVENT = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType PARTICLES = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType LIGHT_UPDATE = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType LOGIN = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType MAP_ITEM_DATA = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType MERCHANT_OFFERS = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType MOVE_ENTITY = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType MOVE_ENTITY_AND_ROTATION = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType MOVE_MINECART = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType ENTITY_ROTATION = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType MOVE_VEHICLE = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType OPEN_BOOK = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType OPEN_CONTAINER = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType OPEN_SIGN = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType PING = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType DEBUG_PONG = new PacketType(Version.v1_20_2, Version.FUTURE_RELEASE);
    public static final PacketType RECIPE = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType ABILITIES = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType CHAT_HEADER = new PacketType(Version.v1_19_1, Version.v1_19_1);
    public static final PacketType CHAT_MESSAGE = new PacketType(Version.v1_19, Version.FUTURE_RELEASE);
    public static final PacketType COMBAT_END = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType COMBAT_ENTER = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType COMBAT_KILL = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType PLAYER_INFO = new PacketType(Version.v1_18, Version.v1_19_1);
    public static final PacketType PLAYER_INFO_REMOVE = new PacketType(Version.v1_19_2, Version.FUTURE_RELEASE);
    public static final PacketType PLAYER_INFO_UPDATE = new PacketType(Version.v1_19_2, Version.FUTURE_RELEASE);
    public static final PacketType PLAYER_LOOK_AT = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType PLAYER_POSITION = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType PLAYER_ROTATION = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType RECIPE_BOOK_ADD = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType RECIPE_BOOK_REMOVE = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType RECIPE_BOOK_SETTINGS = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType UNLOCK_RECIPES = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType REMOVE_ENTITIES = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType REMOVE_MOB_EFFECT = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType RESET_SCORE = new PacketType(Version.v1_20_3, Version.FUTURE_RELEASE);
    public static final PacketType REMOVE_RESOURCE_PACK = new PacketType(Version.v1_20_3, Version.FUTURE_RELEASE);
    public static final PacketType RESOURCEPACK = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType RESPAWN = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType ROTATE_HEAD = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SECTION_BLOCKS_UPDATE = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SELECT_ADVANCEMENTS_TAB = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SERVER_DATA = new PacketType(Version.v1_19, Version.FUTURE_RELEASE);
    public static final PacketType ACTION_BAR = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType BORDER_CENTER = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType BORDER_LERP = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType BORDER_SIZE = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType BORDER_WARNING_DELAY = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType BORDER_WARNING_DISTANCE = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType CAMERA = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    // Moved
    public static final PacketType CARRIED_ITEM = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SET_CHUNK_CACHE_CENTER = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SET_CHUNK_CACHE_RADIUS = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SET_CURSOR_ITEM = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SET_DEFAULT_SPAWN_POSITION = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType DISPLAY_CHAT_PREVIEW = new PacketType(Version.v1_19, Version.v1_19_1);
    public static final PacketType SET_DISPLAY_OBJECTIVE = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SET_ENTITY_DATA = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SET_ENTITY_LINK = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SET_ENTITY_MOTION = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SET_EQUIPMENT = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SET_EXPERIENCE = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SET_HEALTH = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SET_OBJECTIVE = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SET_PASSENGERS = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SET_PLAYER_INVENTORY = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SET_TEAM = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SET_SCORE = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SET_SIMULATION_DISTANCE = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SET_SUBTITLE = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SET_TIME = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SET_TITLE_TEXT = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SET_TITLE_ANIMATION = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType ENTITY_SOUND = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType SOUND = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType CONFIGURATION_START = new PacketType(Version.v1_20_2, Version.FUTURE_RELEASE);
    public static final PacketType STOP_SOUND = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType STORE_COOKIE = new PacketType(Version.v1_20_4, Version.FUTURE_RELEASE);
    public static final PacketType SYSTEM_CHAT_MESSAGE = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType TAB_LIST = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType TAG_QUERY = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType TAKE_ITEM_ENTITY = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType TELEPORT = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType TICKING_STATE = new PacketType(Version.v1_20_3, Version.FUTURE_RELEASE);
    public static final PacketType TICKING_STEP = new PacketType(Version.v1_20_3, Version.FUTURE_RELEASE);
    public static final PacketType TRANSFER = new PacketType(Version.v1_20_4, Version.FUTURE_RELEASE);
    public static final PacketType UPDATE_ADVANCEMENTS = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType UPDATE_ATTRIBUTES = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType UPDATE_ENABLED_FEATURES = new PacketType(Version.v1_18, Version.v1_20_1);
    public static final PacketType UPDATE_MOB_EFFECTS = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType UPDATE_RECIPES = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType UPDATE_TAGS = new PacketType(Version.v1_18, Version.FUTURE_RELEASE);
    public static final PacketType PROJECTILE_POWER = new PacketType(Version.v1_20_4, Version.FUTURE_RELEASE);
    public static final PacketType CUSTOM_REPORT_DETAILS = new PacketType(Version.v1_21, Version.FUTURE_RELEASE);
    public static final PacketType SERVER_LINKS = new PacketType(Version.v1_21, Version.FUTURE_RELEASE);

    public static PacketType register(PacketType packetType) {
        if (packetType.from().isNewerThanOrEqualTo(Version.getServerVersion()) && packetType.to().isOlderThanOrEqualTo(Version.getServerVersion())) {
            int size = PACKET_TYPES.size();
            PACKET_TYPES.put(size, packetType);
            if (AxPlugin.flags().DEBUG.get()) {
                LogUtils.debug("Registered packet with id {}", size);
            }
        }

        return packetType;
    }
}
